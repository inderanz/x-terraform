# Variables for GCP VPC Module
# Generated by X-Terraform Agent v0.0.1

variable "project_id" {
  description = "The ID of the GCP project"
  type        = string

  validation {
    condition     = can(regex("^[a-z][a-z0-9-]{4,28}[a-z0-9]$", var.project_id))
    error_message = "Project ID must be 6-30 characters long, contain only lowercase letters, numbers, and hyphens, and start with a letter."
  }
}

variable "network_name" {
  description = "The name of the VPC network"
  type        = string
  default     = "my-vpc"

  validation {
    condition     = can(regex("^[a-z]([a-z0-9-]*[a-z0-9])?$", var.network_name))
    error_message = "Network name must be 1-63 characters long, contain only lowercase letters, numbers, and hyphens, and start with a letter."
  }
}

variable "vpc_cidr_block" {
  description = "The CIDR block for the VPC"
  type        = string
  default     = "10.0.0.0/16"

  validation {
    condition     = can(cidrhost(var.vpc_cidr_block, 0))
    error_message = "Must be a valid CIDR block."
  }
}

variable "public_subnet_ranges" {
  description = "List of CIDR ranges for public subnets"
  type        = list(string)
  default     = ["10.0.1.0/24", "10.0.2.0/24"]

  validation {
    condition = alltrue([
      for cidr in var.public_subnet_ranges : can(cidrhost(cidr, 0))
    ])
    error_message = "All public subnet CIDR blocks must be valid."
  }
}

variable "private_subnet_ranges" {
  description = "List of CIDR ranges for private subnets"
  type        = list(string)
  default     = ["10.0.10.0/24", "10.0.11.0/24"]

  validation {
    condition = alltrue([
      for cidr in var.private_subnet_ranges : can(cidrhost(cidr, 0))
    ])
    error_message = "All private subnet CIDR blocks must be valid."
  }
}

variable "regions" {
  description = "List of regions for subnets"
  type        = list(string)
  default     = ["us-central1", "us-west1"]

  validation {
    condition     = length(var.regions) >= 1
    error_message = "At least one region must be specified."
  }
}

variable "enable_nat" {
  description = "Enable Cloud NAT for private subnets"
  type        = bool
  default     = true
}

variable "enable_ssh_access" {
  description = "Enable SSH access firewall rule"
  type        = bool
  default     = true
}

variable "enable_http_access" {
  description = "Enable HTTP access firewall rule"
  type        = bool
  default     = true
}

variable "enable_https_access" {
  description = "Enable HTTPS access firewall rule"
  type        = bool
  default     = true
}

variable "ssh_source_ranges" {
  description = "Source IP ranges for SSH access"
  type        = list(string)
  default     = ["0.0.0.0/0"]

  validation {
    condition = alltrue([
      for cidr in var.ssh_source_ranges : can(cidrhost(cidr, 0))
    ])
    error_message = "All SSH source ranges must be valid CIDR blocks."
  }
}

variable "common_tags" {
  description = "Common tags to apply to all resources"
  type        = map(string)
  default = {
    Project     = "terraform-gcp-vpc"
    ManagedBy   = "terraform"
    Environment = "dev"
  }
}

variable "description" {
  description = "Description for the VPC network"
  type        = string
  default     = "VPC network created with Terraform"
} 